{"version":3,"file":"component---src-pages-index-js-52d5593dee8cf37f1975.js","mappings":"2JAgBA,IAbe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAE5B,OACE,uBAAKC,UAAU,iBAAiB,oBAAmBF,GACjD,gBAAC,EAAAG,MAAK,CAACC,MAAM,SAASC,KAAML,EAAa,QAAS,UAAWF,GAC7D,4BAAOC,GACP,gBAAC,EAAAI,MAAK,CAACC,MAAM,WACT,C,+CC8BV,IAvCY,IAAuC,IAAD,UAArC,YAAEE,EAAW,MAAER,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEQ,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBZ,MAExC,OACE,gCACE,6BAAQa,EAAkBb,EAAK,MAAMa,EAAiBb,GACtD,wBAAMc,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASf,IACnC,wBAAMgB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASf,IACpC,wBAAMc,KAAK,sBAAsBC,QAASJ,IACzCV,EACA,C,6GCqBP,UAtDkB,IAAyB,IAAD,MAAvB,KAAEkB,EAAI,SAAEpB,GAAU,EACnC,MAAMqB,GAAkC,QAAtB,EAAAD,EAAKV,KAAKG,oBAAY,aAAtB,EAAwBZ,QAAK,QACzCqB,EAAQF,EAAKG,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAM,CAACzB,SAAUA,EAAUC,MAAOoB,GACjC,uLAUJ,gBAAC,IAAM,CAACrB,SAAUA,EAAUC,MAAOoB,GACjC,sBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAIC,IACT,MAAM5B,EAAQ4B,EAAKC,YAAY7B,OAAS4B,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE3B,UAAU,iBACV6B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYrC,KAG/B,6BAAQ4B,EAAKC,YAAYS,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYrB,aAAeoB,EAAKa,SAE/CJ,SAAS,kBAIZ,KAIJ,EAMN,MAAMK,EAAO,IAAM,gBAAC,IAAG,CAAC1C,MAAM,a","sources":["webpack://gatsby-starter-slices/./src/components/layout.js","webpack://gatsby-starter-slices/./src/components/seo.js","webpack://gatsby-starter-slices/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Slice } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <Slice alias=\"header\" size={isRootPath ? 'large': 'medium'}>{title}</Slice>\n      <main>{children}</main>\n      <Slice alias=\"footer\" />\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.author?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["location","title","children","isRootPath","pathname","className","Slice","alias","size","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","twitter","data","siteTitle","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Head"],"sourceRoot":""}